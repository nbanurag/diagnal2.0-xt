{"version":3,"file":"static/js/558.d8556ce1.chunk.js","mappings":"0KAmCA,UA9Be,WACb,IAAMA,GAAWC,EAAAA,EAAAA,OAEjBC,EAAAA,EAAAA,YAAU,WACRF,GAASG,EAAAA,EAAAA,KACX,GAAG,CAACH,IACJ,IAAMI,GAAaC,EAAAA,EAAAA,KAAY,SAACC,GAAK,OAAKA,EAAMC,KAAKC,MAAM,IACrDC,GAAiBJ,EAAAA,EAAAA,KAAY,SAACC,GAAK,OAAKA,EAAMC,KAAKE,cAAc,IAEjEC,GADeL,EAAAA,EAAAA,KAAY,SAACC,GAAK,OAAKA,EAAMC,KAAKI,YAAY,IACnCF,EAAiBL,EAEjD,OACEQ,EAAAA,EAAAA,KAAA,OAAKC,UAAU,0CAAyCC,SACrDJ,EAASK,KAAI,SAACC,EAAKC,GAAK,OACvBL,EAAAA,EAAAA,KAAA,OAAiCC,UAAU,YAAWC,UACpDI,EAAAA,EAAAA,MAAA,OAAAJ,SAAA,EACEF,EAAAA,EAAAA,KAAA,OAAKC,UAAU,OAAMC,UACnBF,EAAAA,EAAAA,KAAA,OACEO,IAAG,GAAAC,OAAKC,GAAsB,KAAAD,OAAIJ,EAAI,iBACtCM,IAAI,YAGRV,EAAAA,EAAAA,KAAA,OAAAE,SAAME,EAAIO,WACN,GAAAH,OATKJ,EAAIO,MAAIH,OAAGH,GAUlB,KAId,C,8HC9Bad,EAAc,WAAH,sBAAAqB,GAAAC,EAAAA,EAAAA,IAAAC,EAAAA,EAAAA,KAAAC,MAAS,SAAAC,EAAO5B,GAAQ,IAAA6B,EAAAC,EAAAC,EAAAC,EAAA,OAAAN,EAAAA,EAAAA,KAAAO,MAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,OAG3C,OAFHpC,EAAS,CACPqC,KAAMC,EAAAA,KACLJ,EAAAC,KAAA,EAAAD,EAAAE,KAAA,EAEkBG,EAAAA,EAAAA,IAAU,iCAAiC,KAAD,EAAvDP,EAAIE,EAAAM,KACVxC,EAAS,CACPqC,KAAMI,EAAAA,GACNC,QAAa,OAAJV,QAAI,IAAJA,GAAU,QAANH,EAAJG,EAAMzB,YAAI,IAAAsB,GAAM,QAANC,EAAVD,EAAYc,YAAI,IAAAb,GAAmB,QAAnBC,EAAhBD,EAAmB,wBAAgB,IAAAC,OAA/B,EAAJA,EAAqCa,UAC7CV,EAAAE,KAAA,gBAAAF,EAAAC,KAAA,EAAAD,EAAAW,GAAAX,EAAA,SAEHlC,EAAS,CACPqC,KAAMC,EAAAA,GACNI,QAAS,CAAEI,SAAS,KACnB,yBAAAZ,EAAAa,OAAA,GAAAnB,EAAA,kBAEN,gBAAAoB,GAAA,OAAAxB,EAAAyB,MAAA,KAAAC,UAAA,EAhBuB,EAgBvB,EAEYC,EAAY,SAAC5C,GACxB,MAAO,CAAE8B,KAAMe,EAAAA,GAAYV,SAAOW,EAAAA,EAAAA,GAAA,GAAM9C,GAC1C,C","sources":["components/Movies.js","store/Actions/FecthMoviesAction.js"],"sourcesContent":["import React, { useEffect } from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { fetchMovies } from \"../store/Actions/FecthMoviesAction\";\r\nimport \"./common.css\";\r\n\r\nconst Movies = () => {\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(() => {\r\n    dispatch(fetchMovies());\r\n  }, [dispatch]);\r\n  const moviesData = useSelector((state) => state.data.movies);\r\n  const filteredMovies = useSelector((state) => state.data.filteredMovies);\r\n  const searchString = useSelector((state) => state.data.searchString);\r\n  const required = searchString ? filteredMovies : moviesData;\r\n\r\n  return (\r\n    <div className=\"grid grid-cols-3 lg:grid-cols-4 gridGap\">\r\n      {required.map((obj, index) => (\r\n        <div key={`${obj.name}${index}`} className=\"grid-item\">\r\n          <div>\r\n            <div className=\"pb-6\">\r\n              <img\r\n                src={`${process.env.PUBLIC_URL}/${obj[\"poster-image\"]}`}\r\n                alt=\"Logo\"\r\n              />\r\n            </div>\r\n            <div>{obj.name}</div>\r\n          </div>\r\n        </div>\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Movies;\r\n","import axios from \"axios\";\r\nimport { LOADING, SET_MOVIES_DATA, SET_SEARCH } from \"../constants\";\r\n\r\nexport const fetchMovies = () => async (dispatch) => {\r\n  dispatch({\r\n    type: LOADING,\r\n  });\r\n  try {\r\n    const json = await axios.get(\"CONTENTLISTINGPAGE-PAGE2.json\");\r\n    dispatch({\r\n      type: SET_MOVIES_DATA,\r\n      payload: json?.data?.page?.[\"content-items\"]?.content,\r\n    });\r\n  } catch (e) {\r\n    dispatch({\r\n      type: LOADING,\r\n      payload: { loading: false },\r\n    });\r\n  }\r\n};\r\n\r\nexport const setSearch = (data) => {\r\n  return { type: SET_SEARCH, payload: {...data} };\r\n};\r\n"],"names":["dispatch","useDispatch","useEffect","fetchMovies","moviesData","useSelector","state","data","movies","filteredMovies","required","searchString","_jsx","className","children","map","obj","index","_jsxs","src","concat","process","alt","name","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee","_json$data","_json$data$page","_json$data$page$conte","json","wrap","_context","prev","next","type","LOADING","axios","sent","SET_MOVIES_DATA","payload","page","content","t0","loading","stop","_x","apply","arguments","setSearch","SET_SEARCH","_objectSpread"],"sourceRoot":""}